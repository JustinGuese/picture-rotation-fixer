name: Build and Release Binaries

on:
  push:
    branches:
    - main

jobs:
  build:
    permissions:
      contents: write
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          artifact: dist/picture-rotation-fixer
          artifact-name: picture-rotation-fixer-linux-x64
        - os: windows-latest
          artifact: dist/picture-rotation-fixer.exe
          artifact-name: picture-rotation-fixer-windows-x64.exe
        - os: macos-latest
          artifact: dist/picture-rotation-fixer
          artifact-name: picture-rotation-fixer-macos-x64
        - os: macos-14
          artifact: dist/picture-rotation-fixer
          artifact-name: picture-rotation-fixer-macos-arm64
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Build executable
      run: |
        uv run pyinstaller rotate.py --onefile --name "picture-rotation-fixer" \
          --add-data "$(python -c 'import cv2; print(cv2.data.haarcascades + "haarcascade_frontalface_default.xml")'):cv2/data/"

    - name: Rename binary for release
      shell: bash
      run: |
        if [ -f "${{ matrix.artifact }}" ]; then
          mv "${{ matrix.artifact }}" "dist/${{ matrix.artifact-name }}"
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-binary
        path: dist/${{ matrix.artifact-name }}

  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist/

    - name: Prepare release files
      run: |
        find dist/ -type f -exec mv {} dist/ \; 2>/dev/null || true
        find dist/ -type d -empty -delete 2>/dev/null || true
        ls -la dist/

    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        files: dist/*
